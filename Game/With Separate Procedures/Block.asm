                              
;------------------------------------------------------------------
;============================= Blocks =============================
;------------------------------------------------------------------

FULLBLOCK PROC
    PUSH BP
    MOV BP,SP
    PUSH BX
    PUSH DX
    PUSH CX
    PUSH AX
    
    MOV COLORBLOCK,1
    MOV BLOCKCX,7
    MOV BLOCKDX,12
    CALL BLOCK

    MOV COLORBLOCK,2
    MOV BLOCKCX,59
    MOV BLOCKDX,12
    CALL BLOCK

    MOV COLORBLOCK,4
    ADD BLOCKCX,48
    MOV BLOCKDX,12
    CALL BLOCK

    MOV COLORBLOCK,1
    ADD BLOCKCX,48
    MOV BLOCKDX,12
    CALL BLOCK

    MOV COLORBLOCK,2
    ADD BLOCKCX,48
    MOV BLOCKDX,12
    CALL BLOCK

    MOV COLORBLOCK,4
    ADD BLOCKCX,48
    MOV BLOCKDX,12
    CALL BLOCK

    ;MOV COLORBLOCK,1
    ;ADD BLOCKCX,48
    ;MOV BLOCKDX,12
    ;CALL BLOCK

    ;MOV COLORBLOCK,2
    ;ADD BLOCKCX,3
    ;MOV BLOCKDX,12
    ;CALL HALFBLOCK
;END OF FIRST ROW

    MOV COLORBLOCK,4
    MOV BLOCKCX,11
    ADD BLOCKDX,10
    CALL block


    MOV COLORBLOCK,1
    ADD BLOCKCX,48
    MOV BLOCKDX,22
    CALL BLOCK    
    
    MOV COLORBLOCK,2
    ADD BLOCKCX,48
    MOV BLOCKDX,22
    CALL BLOCK    
    
    MOV COLORBLOCK,4
    ADD BLOCKCX,48
    MOV BLOCKDX,22
    CALL BLOCK    
    
    MOV COLORBLOCK,1
    ADD BLOCKCX,48
    MOV BLOCKDX,22
    CALL BLOCK    

    MOV COLORBLOCK,2
    ADD BLOCKCX,48
    MOV BLOCKDX,22
    CALL BLOCK    

;    MOV COLORBLOCK,4
;    ADD BLOCKCX,44
;    MOV BLOCKDX,22
;    CALL BLOCK    
;
    ;MOV COLORBLOCK,1
    ;ADD BLOCKCX,44
    ;MOV BLOCKDX,22
    ;CALL BLOCK

;END OF SECOND ROW

    MOV COLORBLOCK,2
    MOV BLOCKCX,11
    ADD BLOCKDX,10
    CALL BLOCK

    MOV COLORBLOCK,4
    ADD BLOCKCX,48
    MOV BLOCKDX,32
    CALL BLOCK    


    MOV COLORBLOCK,1
    ADD BLOCKCX,48
    MOV BLOCKDX,32
    CALL BLOCK

    MOV COLORBLOCK,2
    ADD BLOCKCX,48
    MOV BLOCKDX,32
    CALL BLOCK

    MOV COLORBLOCK,4
    ADD BLOCKCX,48
    MOV BLOCKDX,32
    CALL BLOCK

    MOV COLORBLOCK,1
    ADD BLOCKCX,48
    MOV BLOCKDX,32
    CALL BLOCK

;    MOV COLORBLOCK,2
;    ADD BLOCKCX,44
;    MOV BLOCKDX,32
;    CALL BLOCK
    
    ;MOV COLORBLOCK,4
    ;ADD BLOCKCX,44
    ;MOV BLOCKDX,32
    ;CALL HALFBLOCK
;END OF THIRD ROW

    MOV COLORBLOCK,1
    MOV BLOCKCX,11
    ADD BLOCKDX,10
    CALL BLOCK
    MOV LASTBLOCKCX1,11
    MOV LASTBLOCKDX1,42
    ADD LASTBLOCKDX1,13 
    
    MOV COLORBLOCK,2
    ADD BLOCKCX,48
    MOV BLOCKDX,42
    CALL BLOCK

    MOV LASTBLOCKCX2,59
    MOV LASTBLOCKDX2,42
    ADD LASTBLOCKDX2,13
    
    
    MOV COLORBLOCK,4
    ADD BLOCKCX,48
    MOV BLOCKDX,42
    CALL BLOCK

    MOV LASTBLOCKCX3,107
    MOV LASTBLOCKDX3,42
    ADD LASTBLOCKDX3,13    
    
    MOV COLORBLOCK,1
    ADD BLOCKCX,48
    MOV BLOCKDX,42
    CALL BLOCK

    MOV LASTBLOCKCX4,155
    MOV LASTBLOCKDX4,42
    ADD LASTBLOCKDX4,13    
    
    MOV COLORBLOCK,2
    ADD BLOCKCX,48
    MOV BLOCKDX,42
    CALL BLOCK

    MOV LASTBLOCKCX5,203
    MOV LASTBLOCKDX5,42
    ADD LASTBLOCKDX5,13    

    MOV COLORBLOCK,4
    ADD BLOCKCX,48
    MOV BLOCKDX,42
    CALL BLOCK

    MOV LASTBLOCKCX6,251
    MOV LASTBLOCKDX6,42
    ADD LASTBLOCKDX6,13    

    ;MOV COLORBLOCK,1
    ;ADD BLOCKCX,48
    ;MOV BLOCKDX,42
    ;CALL BLOCK    

    ;MOV COLORBLOCK,2
    ;ADD BLOCKCX,38
    ;MOV BLOCKDX,42
    ;CALL BLOCK
    POP AX
    POP CX
    POP DX
    POP BX
    POP BP    
    RET 

FULLBLOCK ENDP

BLOCK PROC

    PUSH BP
    MOV BP,SP
    PUSH BX
    PUSH DX
    PUSH CX
    PUSH AX
    
    MOV AH,0CH 
    MOV AL,COLORBLOCK

    MOV CX,BLOCKCX
    MOV DX,BLOCKDX
    MOV BH,0
    

    WHILE212:
        CMP COUNTER1,43
        JA ENDWHILE212
        INT 10H
        INC COUNTER1
        INC CX
        JMP WHILE212

    ENDWHILE212:

    MOV COUNTER1,0
    MOV CX,BLOCKCX
    INC DX    

    WHILE213:
        CMP COUNTER1,43
        JA ENDWHILE213
        INT 10H
        INC COUNTER1
        INC CX
        JMP WHILE213

    ENDWHILE213:

    MOV COUNTER1,0
    MOV CX,BLOCKCX
    INC DX    

    WHILE214:
        CMP COUNTER1,43
        JA ENDWHILE214
        INT 10H
        INC COUNTER1
        INC CX
        JMP WHILE214

    ENDWHILE214:

    MOV COUNTER1,0
    MOV CX,BLOCKCX
    INC DX    

    WHILE215:
        CMP COUNTER1,43
        JA ENDWHILE215
        INT 10H
        INC COUNTER1
        INC CX
        JMP WHILE215

    ENDWHILE215:

    MOV COUNTER1,0
    MOV CX,BLOCKCX
    INC DX    

    WHILE216:
        CMP COUNTER1,43
        JA ENDWHILE216
        INT 10H
        INC COUNTER1
        INC CX
        JMP WHILE216

    ENDWHILE216:            

    MOV COUNTER1,0
    MOV CX,BLOCKCX
    INC DX    

    WHILE217:
        CMP COUNTER1,43
        JA ENDWHILE217
        INT 10H
        INC COUNTER1
        INC CX
        JMP WHILE217

    ENDWHILE217:


    MOV COUNTER1,0
    MOV CX,BLOCKCX
    INC DX    

    WHILE218:
        CMP COUNTER1,43
        JA ENDWHILE218
        INT 10H
        INC COUNTER1
        INC CX
        JMP WHILE218

    ENDWHILE218:

    MOV COUNTER1,0
    MOV CX,BLOCKCX
    INC DX    

    WHILE219:
        CMP COUNTER1,43
        JA ENDWHILE219
        INT 10H
        INC COUNTER1
        INC CX
        JMP WHILE219

    ENDWHILE219:

    MOV COUNTER1,0
    MOV CX,BLOCKCX
    INC DX    

    WHILE220:
        CMP COUNTER1,43
        JA ENDWHILE220
        INT 10H
        INC COUNTER1
        INC CX
        JMP WHILE220

    ENDWHILE220:    
    POP AX
    POP CX
    POP DX
    POP BX
    POP BP    
    RET 
BLOCK ENDP
